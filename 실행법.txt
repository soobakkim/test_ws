## ERP42 Controller Node 실행 방법

이 문서는 ROS2 워크스페이스 내의 `erp42_controller` 패키지를 빌드하고 실행하는 방법을 안내합니다.

**주의:** 이 모든 명령어는 Ubuntu 환경의 터미널에서 실행해야 합니다.

### 1. ROS2 워크스페이스 빌드

`test_ws` 워크스페이스의 루트 디렉토리로 이동한 후, `erp42_controller` 패키지를 빌드합니다.

```bash
cd ~/test_ws
colcon build --packages-select erp42_controller
```

### 2. 환경 설정 소싱

새로운 터미널을 열거나, 빌드 후에는 항상 ROS2 환경과 워크스페이스 환경을 소싱해야 합니다. 이는 ROS2가 패키지와 실행 파일을 찾을 수 있도록 합니다.

```bash
source /opt/ros/humble/setup.bash
source install/setup.bash
```

### 3. ERP42 컨트롤러 노드 실행

환경 설정이 완료된 터미널에서 컨트롤러 노드를 실행합니다. 이 노드는 `cmd_vel` 토픽을 구독하여 ERP42에 시리얼 명령을 전송합니다.

```bash
ros2 run erp42_controller erp42_controller_node
```

### 4. (새 터미널에서) 차량 조종 명령어 예시

새로운 터미널을 열고, 위 2단계의 환경 설정 소싱을 먼저 수행한 후, 아래 명령어를 사용하여 차량을 조종할 수 있습니다. `-r 10`은 10Hz로 메시지를 계속 발행하라는 의미입니다.

*   **전진 (0.5 m/s):**
    ```bash
    ros2 topic pub /cmd_vel geometry_msgs/msg/Twist "{linear: {x: 0.5, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.0}}" -r 10
    ```

*   **정지:**
    ```bash
    ros2 topic pub /cmd_vel geometry_msgs/msg/Twist "{linear: {x: 0.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.0}}" -r 10
    ```

*   **후진 (-0.5 m/s):**
    ```bash
    ros2 topic pub /cmd_vel geometry_msgs/msg/Twist "{linear: {x: -0.5, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.0}}" -r 10
    ```

*   **전진하며 좌회전 (0.5 m/s, 0.2 rad/s):**
    ```bash
    ros2 topic pub /cmd_vel geometry_msgs/msg/Twist "{linear: {x: 0.5, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.2}}" -r 10
    ```

*   **전진하며 우회전 (0.5 m/s, -0.2 rad/s):**
    ```bash
    ros2 topic pub /cmd_vel geometry_msgs/msg/Twist "{linear: {x: 0.5, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: -0.2}}" -r 10
    ```

### 5. 파라미터 변경 (선택 사항)

`erp42_controller_node`는 ROS2 파라미터를 통해 시리얼 포트, 보드레이트 등을 설정할 수 있습니다. 예를 들어, 시리얼 포트를 `/dev/ttyACM0`으로 변경하려면:

```bash
ros2 run erp42_controller erp42_controller_node --ros-args -p serial_port:=/dev/ttyACM0
```

사용 가능한 파라미터:
*   `serial_port` (string, 기본값: `/dev/ttyUSB0`)
*   `baud_rate` (int, 기본값: `115200`)
*   `max_linear_speed` (double, 기본값: `1.0`)
*   `max_angular_speed` (double, 기본값: `0.5`)
*   `speed_scale_factor` (double, 기본값: `10.0`)
*   `steering_scale_factor` (double, 기본값: `100.0`)
